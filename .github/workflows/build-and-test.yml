name: build-and-test
on:
  pull_request:
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  ATMOS_PLAN_DYNAMODB_TABLE: cptest-core-ue2-auto-github-actions-test-access
  ATMOS_PLAN_S3_BUCKET: cptest-core-ue2-auto-github-actions-test-access

# Permissions required for assuming AWS identity
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn

      - name: Install Dependencies
        run: yarn --frozen-lockfile --prefer-offline

      - name: Build
        run: yarn build

      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi
        id: diff

      # If index.js was different than expected, upload the expected version as an artifact
      - name: Upload dist/ to Git
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add dist/
          git commit -m "Update dist/ [skip ci]"
          git push

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: cloudposse/github-action-setup-atmos@v1.0.0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: "atmos-terraform-plan-gitops"

      - uses: ./
        id: store-plan
        with:
          action: storePlan
          planPath: src/__fixtures__/mock.planfile
          component: demo
          stack: ue1-sandbox
          tableName: ${{ env.ATMOS_PLAN_DYNAMODB_TABLE }}
          bucketName: ${{ env.ATMOS_PLAN_S3_BUCKET }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}

      - uses: ./
        id: get-plan
        with:
          action: getPlan
          planPath: ./test.planfile
          component: demo
          stack: ue1-sandbox
          tableName: ${{ env.ATMOS_PLAN_DYNAMODB_TABLE }}
          bucketName: ${{ env.ATMOS_PLAN_S3_BUCKET }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
