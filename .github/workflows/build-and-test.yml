name: build-and-test
on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ATMOS_PLAN_DYNAMODB_TABLE: cptest-core-ue2-auto-gitops
  ATMOS_PLAN_S3_BUCKET: cptest-core-ue2-auto-gitops

# Permissions required for assuming AWS identity
permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for check-dist

jobs:
  check-dist:
    name: "check-dist matches source"
    uses: cloudposse/github-actions-workflows/.github/workflows/ci-typescript-app-check-dist.yml@main

  unit-test:
    name: "unit tests"
    runs-on: ubuntu-latest
    needs: check-dist
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn
      - name: install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
      - name: run unit tests
        run: yarn test

  integration-test:
    name: "integration tests"
    runs-on: ubuntu-latest
    needs: check-dist
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: package.json
          cache: yarn

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: "atmos-terraform-plan-gitops"

      - uses: ./
        id: store-plan
        with:
          action: storePlan
          planPath: src/__fixtures__/mock.planfile
          component: demo
          stack: ue1-sandbox
          tableName: ${{ env.ATMOS_PLAN_DYNAMODB_TABLE }}
          bucketName: ${{ env.ATMOS_PLAN_S3_BUCKET }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}

      - uses: ./
        id: get-plan
        with:
          action: getPlan
          planPath: ./test.planfile
          component: demo
          stack: ue1-sandbox
          tableName: ${{ env.ATMOS_PLAN_DYNAMODB_TABLE }}
          bucketName: ${{ env.ATMOS_PLAN_S3_BUCKET }}
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}

      - name: cat planfile
        run: |
          ls -al
          echo "before planfile"
          cat test.planfile
          echo "after cat planfile"
